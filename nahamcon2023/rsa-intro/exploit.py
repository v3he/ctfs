import gmpy2
from sympy import factorint
from Crypto.Util.number import inverse, long_to_bytes

def decrypt_first_part():

    p = 152933908726088000025981821717328900253841375038873501148415965946834656401640031351528841350980891403699057384028031438869081577476655254545307973436745130347696405243778481262922512227444915738801835842194123487258255790292004204412236314558718035967575479232723997430178018130995420315759809636522091902529
    q = 173403581892981708663967289381727914513043623656015065332774927693090954681172215632003125824638611519248812013286298011144213434368768979531792528759533473573346156338400142951284462417074992959330154930806611253683603690442142765076944118447174491399811297223146324861971722035746276165056022562961558299229
    e = 65537
    ct = 24900222896050719055946861973957246283663114493271057619080357155524140641110166671081924849912377863714741017586072836978357770860853088772671413685690588862677870057778743649753806625109141461870634890427341765490174013453580041222600439459744928592280825572907034701116518706347830413085865254963646096687533779205345001529893651672061316525244476464884343232361498032095529980932018530224029715267731845742371944443150142380656402289372470902457020777826323051802030062577945893807552316343833971210833255536637260838474638607847822451324479398241526919184038034180388382949827367896808363560947298749154349868503

    n = p * q
    phi_n = (p - 1) * (q - 1)
    d = inverse(e, phi_n)
    pt = pow(ct, d, n)

    return long_to_bytes(pt).decode()

def decrypt_second_part():

    ct = 55717486909410107003108426413232346564412491530111436942121941739686926249314710854996834619
    m2 = gmpy2.iroot(ct, 3)[0]

    return long_to_bytes(m2).decode()

def decrypt_third_part():

    e = 65537
    n = 107710970774233
    ct_parts = [18128889449669, 12202311999558, 10705744036504, 23864757944740]

    factors = factorint(n)
    p, q = list(factors.keys())
    phi = (p-1)*(q-1)
    d = inverse(e, phi)

    m3_parts = [pow(ct, d, n) for ct in ct_parts]
    return ''.join(long_to_bytes(m).decode() for m in m3_parts)

print(f"{decrypt_first_part()}{decrypt_second_part()}{decrypt_third_part()}")